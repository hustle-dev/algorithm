/* 
  1012.txt
  Algorithms

  Created by Lee JeongMin on 2021/03/01.
  
*/


#include <iostream>
#include <cstring>

using namespace std;

int b1[50][50] = {0, };
int b2[50][50] = {0, };

int ni[4] = {0, -1, 0, 1};
int nj[4] = {-1, 0, 1, 0};

void dfs_b(int i, int j, int n, int m)
{
    int a = i;
    int b = j;
    
    for(int k = 0; k<4; k++)
    {
        i = a;
        j = b;
        i += ni[k];
        j += nj[k];
        
        if(i<0 || j<0 || i>=n || j>=m)
            continue;
        
        if((b1[i][j] == 1) && (b2[i][j] == 0))
        {
            b2[i][j] = 1;
            dfs_b(i, j, n, m);
        }
    }
}

int main(void)
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    int t, n, m, k;
    int xpos,ypos;
    int ji = 0;
    
    cin >> t;
    
    for(int i =0; i<t; i++)
    {
        cin >> m >> n >> k;
        
        for(int j = 0; j<k; j++)
        {
            cin >> xpos >> ypos;
            b1[ypos][xpos] = 1;
        }
        
        for(int i = 0; i<n; i++)
        {
            for(int j = 0; j<m; j++)
            {
                if((b1[i][j] == 1) && (b2[i][j] == 0))
                {
                    ji++;
                    b2[i][j] = 1;
                    dfs_b(i, j, n, m);
                }
                
            }
            
        }
        memset(&b1, 0, sizeof(b1));
        memset(&b2, 0, sizeof(b2));
        
        cout << ji << '\n';
        ji = 0;
    }
    return 0;
}
